services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: gomoku_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: gomoku_db
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - gomoku_network
    command: mongod --logpath /var/log/mongodb/mongod.log --logappend --verbose

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gomoku_backend
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "5678:5678"  # Debug port for debugpy
    environment:
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/gomoku_db?authSource=admin
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-dev-secret-key}
      - CORS_ORIGINS=["http://localhost:9001","http://127.0.0.1:9001","http://localhost:3000","http://127.0.0.1:3000"]
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    depends_on:
      - mongodb
    networks:
      - gomoku_network
    command: uvicorn app:app --host 0.0.0.0 --port 9000 --reload --log-level debug

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: gomoku_frontend
    restart: unless-stopped
    ports:
      - "9001:3000"
      - "9009:9009"  # Debug port for React DevTools
    environment:
      - REACT_APP_API_URL=http://localhost:9000
      - REACT_APP_WS_URL=ws://localhost:9000
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - GENERATE_SOURCEMAP=true
      - DEBUG=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - gomoku_network
    stdin_open: true
    tty: true

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: gomoku_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - gomoku_network
    profiles:
      - production

  # Debug MongoDB Admin Interface
  mongo-express:
    image: mongo-express:latest
    container_name: gomoku_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - gomoku_network
    profiles:
      - debug

volumes:
  mongodb_data:
  uploads_data:

networks:
  gomoku_network:
    driver: bridge
